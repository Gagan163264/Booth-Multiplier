$date
	Wed Nov 24 20:01:27 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 8 ! out [7:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module m1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 $ clkin $end
$var wire 4 ( float [3:0] $end
$var wire 1 % reset $end
$var wire 1 ) temp $end
$var wire 1 * qtpin $end
$var wire 1 + qtp $end
$var wire 8 , out [7:0] $end
$var wire 4 - o2 [3:0] $end
$var wire 4 . o1 [3:0] $end
$var wire 1 / endflag $end
$var wire 1 0 clk $end
$var wire 4 1 Qout [3:0] $end
$var wire 4 2 Qin [3:0] $end
$var wire 4 3 ALUout [3:0] $end
$var wire 4 4 ACout [3:0] $end
$scope module AC $end
$var wire 1 5 load $end
$var wire 1 % reset $end
$var wire 4 6 r [3:0] $end
$var wire 4 7 din [3:0] $end
$var wire 1 0 clk $end
$scope begin array_loop[0] $end
$scope module dfp $end
$var wire 1 8 in $end
$var wire 1 5 load $end
$var wire 1 % reset $end
$var wire 1 9 out $end
$var wire 1 0 clk $end
$var wire 1 : _in $end
$scope module dfr_1 $end
$var wire 1 % reset $end
$var wire 1 ; reset_ $end
$var wire 1 9 out $end
$var wire 1 : in $end
$var wire 1 < df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 < o $end
$var wire 1 ; i1 $end
$var wire 1 : i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 < in $end
$var wire 1 9 out $end
$var wire 1 0 clk $end
$var reg 1 9 df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 ; o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 9 i0 $end
$var wire 1 8 i1 $end
$var wire 1 5 j $end
$var wire 1 : o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[1] $end
$scope module dfp $end
$var wire 1 = in $end
$var wire 1 5 load $end
$var wire 1 % reset $end
$var wire 1 > out $end
$var wire 1 0 clk $end
$var wire 1 ? _in $end
$scope module dfr_1 $end
$var wire 1 % reset $end
$var wire 1 @ reset_ $end
$var wire 1 > out $end
$var wire 1 ? in $end
$var wire 1 A df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 A o $end
$var wire 1 @ i1 $end
$var wire 1 ? i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 A in $end
$var wire 1 > out $end
$var wire 1 0 clk $end
$var reg 1 > df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 @ o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 > i0 $end
$var wire 1 = i1 $end
$var wire 1 5 j $end
$var wire 1 ? o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[2] $end
$scope module dfp $end
$var wire 1 B in $end
$var wire 1 5 load $end
$var wire 1 % reset $end
$var wire 1 C out $end
$var wire 1 0 clk $end
$var wire 1 D _in $end
$scope module dfr_1 $end
$var wire 1 % reset $end
$var wire 1 E reset_ $end
$var wire 1 C out $end
$var wire 1 D in $end
$var wire 1 F df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 F o $end
$var wire 1 E i1 $end
$var wire 1 D i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 F in $end
$var wire 1 C out $end
$var wire 1 0 clk $end
$var reg 1 C df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 E o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 C i0 $end
$var wire 1 B i1 $end
$var wire 1 5 j $end
$var wire 1 D o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[3] $end
$scope module dfp $end
$var wire 1 G in $end
$var wire 1 5 load $end
$var wire 1 % reset $end
$var wire 1 H out $end
$var wire 1 0 clk $end
$var wire 1 I _in $end
$scope module dfr_1 $end
$var wire 1 % reset $end
$var wire 1 J reset_ $end
$var wire 1 H out $end
$var wire 1 I in $end
$var wire 1 K df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 K o $end
$var wire 1 J i1 $end
$var wire 1 I i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 K in $end
$var wire 1 H out $end
$var wire 1 0 clk $end
$var reg 1 H df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 J o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 H i0 $end
$var wire 1 G i1 $end
$var wire 1 5 j $end
$var wire 1 I o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module Q $end
$var wire 1 L load $end
$var wire 1 M reset $end
$var wire 4 N r [3:0] $end
$var wire 4 O din [3:0] $end
$var wire 1 0 clk $end
$scope begin array_loop[0] $end
$scope module dfp $end
$var wire 1 P in $end
$var wire 1 L load $end
$var wire 1 M reset $end
$var wire 1 Q out $end
$var wire 1 0 clk $end
$var wire 1 R _in $end
$scope module dfr_1 $end
$var wire 1 M reset $end
$var wire 1 S reset_ $end
$var wire 1 Q out $end
$var wire 1 R in $end
$var wire 1 T df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 T o $end
$var wire 1 S i1 $end
$var wire 1 R i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 T in $end
$var wire 1 Q out $end
$var wire 1 0 clk $end
$var reg 1 Q df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 M i $end
$var wire 1 S o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 Q i0 $end
$var wire 1 P i1 $end
$var wire 1 L j $end
$var wire 1 R o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[1] $end
$scope module dfp $end
$var wire 1 U in $end
$var wire 1 L load $end
$var wire 1 M reset $end
$var wire 1 V out $end
$var wire 1 0 clk $end
$var wire 1 W _in $end
$scope module dfr_1 $end
$var wire 1 M reset $end
$var wire 1 X reset_ $end
$var wire 1 V out $end
$var wire 1 W in $end
$var wire 1 Y df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 Y o $end
$var wire 1 X i1 $end
$var wire 1 W i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 Y in $end
$var wire 1 V out $end
$var wire 1 0 clk $end
$var reg 1 V df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 M i $end
$var wire 1 X o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 V i0 $end
$var wire 1 U i1 $end
$var wire 1 L j $end
$var wire 1 W o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[2] $end
$scope module dfp $end
$var wire 1 Z in $end
$var wire 1 L load $end
$var wire 1 M reset $end
$var wire 1 [ out $end
$var wire 1 0 clk $end
$var wire 1 \ _in $end
$scope module dfr_1 $end
$var wire 1 M reset $end
$var wire 1 ] reset_ $end
$var wire 1 [ out $end
$var wire 1 \ in $end
$var wire 1 ^ df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 ^ o $end
$var wire 1 ] i1 $end
$var wire 1 \ i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 ^ in $end
$var wire 1 [ out $end
$var wire 1 0 clk $end
$var reg 1 [ df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 M i $end
$var wire 1 ] o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 [ i0 $end
$var wire 1 Z i1 $end
$var wire 1 L j $end
$var wire 1 \ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin array_loop[3] $end
$scope module dfp $end
$var wire 1 _ in $end
$var wire 1 L load $end
$var wire 1 M reset $end
$var wire 1 ` out $end
$var wire 1 0 clk $end
$var wire 1 a _in $end
$scope module dfr_1 $end
$var wire 1 M reset $end
$var wire 1 b reset_ $end
$var wire 1 ` out $end
$var wire 1 a in $end
$var wire 1 c df_in $end
$var wire 1 0 clk $end
$scope module and2_0 $end
$var wire 1 c o $end
$var wire 1 b i1 $end
$var wire 1 a i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 c in $end
$var wire 1 ` out $end
$var wire 1 0 clk $end
$var reg 1 ` df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 M i $end
$var wire 1 b o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 ` i0 $end
$var wire 1 _ i1 $end
$var wire 1 L j $end
$var wire 1 a o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu0 $end
$var wire 4 d a [3:0] $end
$var wire 4 e b [3:0] $end
$var wire 1 f qt $end
$var wire 1 g s $end
$var wire 1 + qtn $end
$var wire 4 h out [3:0] $end
$var wire 4 i o [3:0] $end
$var wire 1 j cout $end
$var wire 1 0 clk $end
$scope module as $end
$var wire 1 f control $end
$var wire 4 k i0 [3:0] $end
$var wire 4 l i1 [3:0] $end
$var wire 4 m o [3:0] $end
$var wire 1 j cout $end
$var wire 5 n c [4:0] $end
$scope begin add_loop[0] $end
$scope module as $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q cin $end
$var wire 1 f control $end
$var wire 4 r t [3:0] $end
$var wire 1 s sum $end
$var wire 1 t cout $end
$scope module a0 $end
$var wire 1 o i0 $end
$var wire 1 u i1 $end
$var wire 1 v o $end
$upscope $end
$scope module a1 $end
$var wire 1 w i0 $end
$var wire 1 q i1 $end
$var wire 1 x o $end
$upscope $end
$scope module a2 $end
$var wire 1 y i0 $end
$var wire 1 z i1 $end
$var wire 1 t o $end
$upscope $end
$scope module x0 $end
$var wire 1 o i0 $end
$var wire 1 { i1 $end
$var wire 1 | o $end
$upscope $end
$scope module x1 $end
$var wire 1 } i0 $end
$var wire 1 q i1 $end
$var wire 1 s o $end
$upscope $end
$scope module xas $end
$var wire 1 p i0 $end
$var wire 1 f i1 $end
$var wire 1 ~ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_loop[1] $end
$scope module as $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" cin $end
$var wire 1 f control $end
$var wire 4 $" t [3:0] $end
$var wire 1 %" sum $end
$var wire 1 &" cout $end
$scope module a0 $end
$var wire 1 !" i0 $end
$var wire 1 '" i1 $end
$var wire 1 (" o $end
$upscope $end
$scope module a1 $end
$var wire 1 )" i0 $end
$var wire 1 #" i1 $end
$var wire 1 *" o $end
$upscope $end
$scope module a2 $end
$var wire 1 +" i0 $end
$var wire 1 ," i1 $end
$var wire 1 &" o $end
$upscope $end
$scope module x0 $end
$var wire 1 !" i0 $end
$var wire 1 -" i1 $end
$var wire 1 ." o $end
$upscope $end
$scope module x1 $end
$var wire 1 /" i0 $end
$var wire 1 #" i1 $end
$var wire 1 %" o $end
$upscope $end
$scope module xas $end
$var wire 1 "" i0 $end
$var wire 1 f i1 $end
$var wire 1 0" o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_loop[2] $end
$scope module as $end
$var wire 1 1" a $end
$var wire 1 2" b $end
$var wire 1 3" cin $end
$var wire 1 f control $end
$var wire 4 4" t [3:0] $end
$var wire 1 5" sum $end
$var wire 1 6" cout $end
$scope module a0 $end
$var wire 1 1" i0 $end
$var wire 1 7" i1 $end
$var wire 1 8" o $end
$upscope $end
$scope module a1 $end
$var wire 1 9" i0 $end
$var wire 1 3" i1 $end
$var wire 1 :" o $end
$upscope $end
$scope module a2 $end
$var wire 1 ;" i0 $end
$var wire 1 <" i1 $end
$var wire 1 6" o $end
$upscope $end
$scope module x0 $end
$var wire 1 1" i0 $end
$var wire 1 =" i1 $end
$var wire 1 >" o $end
$upscope $end
$scope module x1 $end
$var wire 1 ?" i0 $end
$var wire 1 3" i1 $end
$var wire 1 5" o $end
$upscope $end
$scope module xas $end
$var wire 1 2" i0 $end
$var wire 1 f i1 $end
$var wire 1 @" o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_loop[3] $end
$scope module as $end
$var wire 1 A" a $end
$var wire 1 B" b $end
$var wire 1 C" cin $end
$var wire 1 f control $end
$var wire 4 D" t [3:0] $end
$var wire 1 E" sum $end
$var wire 1 F" cout $end
$scope module a0 $end
$var wire 1 A" i0 $end
$var wire 1 G" i1 $end
$var wire 1 H" o $end
$upscope $end
$scope module a1 $end
$var wire 1 I" i0 $end
$var wire 1 C" i1 $end
$var wire 1 J" o $end
$upscope $end
$scope module a2 $end
$var wire 1 K" i0 $end
$var wire 1 L" i1 $end
$var wire 1 F" o $end
$upscope $end
$scope module x0 $end
$var wire 1 A" i0 $end
$var wire 1 M" i1 $end
$var wire 1 N" o $end
$upscope $end
$scope module x1 $end
$var wire 1 O" i0 $end
$var wire 1 C" i1 $end
$var wire 1 E" o $end
$upscope $end
$scope module xas $end
$var wire 1 B" i0 $end
$var wire 1 f i1 $end
$var wire 1 P" o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cp $end
$var wire 1 f i0 $end
$var wire 1 g o $end
$var wire 1 + i1 $end
$upscope $end
$scope module mx1 $end
$var wire 4 Q" i0 [3:0] $end
$var wire 4 R" i1 [3:0] $end
$var wire 1 g s $end
$var wire 4 S" opm [3:0] $end
$scope begin mux_loop[0] $end
$scope module mx $end
$var wire 1 T" i0 $end
$var wire 1 U" i1 $end
$var wire 1 g j $end
$var wire 1 V" o $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module mx $end
$var wire 1 W" i0 $end
$var wire 1 X" i1 $end
$var wire 1 g j $end
$var wire 1 Y" o $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module mx $end
$var wire 1 Z" i0 $end
$var wire 1 [" i1 $end
$var wire 1 g j $end
$var wire 1 \" o $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module mx $end
$var wire 1 ]" i0 $end
$var wire 1 ^" i1 $end
$var wire 1 g j $end
$var wire 1 _" o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ashr1 $end
$var wire 4 `" in [0:3] $end
$var wire 1 ) q $end
$var wire 4 a" out [0:3] $end
$scope begin RSC_loop[0] $end
$upscope $end
$scope begin RSC_loop[1] $end
$upscope $end
$scope begin RSC_loop[2] $end
$upscope $end
$upscope $end
$scope module ashr2 $end
$var wire 4 b" in [0:3] $end
$var wire 1 ) k $end
$var wire 1 * q $end
$var wire 4 c" out [0:3] $end
$scope begin RSC_loop[0] $end
$upscope $end
$scope begin RSC_loop[1] $end
$upscope $end
$scope begin RSC_loop[2] $end
$upscope $end
$upscope $end
$scope module cu0 $end
$var wire 1 $ clkin $end
$var wire 1 % reset $end
$var wire 2 d" op [1:0] $end
$var wire 1 / endflag $end
$var wire 1 e" dfpin $end
$var wire 1 0 clk $end
$var wire 1 f" ain $end
$scope module Dctr $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 2 g" op [1:0] $end
$var wire 3 h" inp [2:0] $end
$var wire 1 f" cnt $end
$scope begin ctr_loop[0] $end
$scope module sl $end
$var wire 1 $ clk $end
$var wire 1 i" in $end
$var wire 1 % reset $end
$var wire 1 j" q $end
$var wire 1 k" out $end
$var wire 1 f" cnt $end
$var wire 1 l" b $end
$var wire 1 m" a $end
$scope module an $end
$var wire 1 i" i0 $end
$var wire 1 k" o $end
$var wire 1 l" i1 $end
$upscope $end
$scope module dfi $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 j" out $end
$var wire 1 f" load $end
$var wire 1 m" in $end
$var wire 1 n" _in $end
$scope module dfr_1 $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 o" reset_ $end
$var wire 1 j" out $end
$var wire 1 n" in $end
$var wire 1 p" df_in $end
$scope module and2_0 $end
$var wire 1 p" o $end
$var wire 1 o" i1 $end
$var wire 1 n" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 $ clk $end
$var wire 1 p" in $end
$var wire 1 j" out $end
$var reg 1 j" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 o" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 j" i0 $end
$var wire 1 n" o $end
$var wire 1 f" j $end
$var wire 1 m" i1 $end
$upscope $end
$upscope $end
$scope module iv1 $end
$var wire 1 j" i $end
$var wire 1 l" o $end
$upscope $end
$scope module xr $end
$var wire 1 j" i0 $end
$var wire 1 i" i1 $end
$var wire 1 m" o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ctr_loop[1] $end
$scope module sl $end
$var wire 1 $ clk $end
$var wire 1 q" in $end
$var wire 1 % reset $end
$var wire 1 r" q $end
$var wire 1 s" out $end
$var wire 1 f" cnt $end
$var wire 1 t" b $end
$var wire 1 u" a $end
$scope module an $end
$var wire 1 q" i0 $end
$var wire 1 s" o $end
$var wire 1 t" i1 $end
$upscope $end
$scope module dfi $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 r" out $end
$var wire 1 f" load $end
$var wire 1 u" in $end
$var wire 1 v" _in $end
$scope module dfr_1 $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 w" reset_ $end
$var wire 1 r" out $end
$var wire 1 v" in $end
$var wire 1 x" df_in $end
$scope module and2_0 $end
$var wire 1 x" o $end
$var wire 1 w" i1 $end
$var wire 1 v" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 $ clk $end
$var wire 1 x" in $end
$var wire 1 r" out $end
$var reg 1 r" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 w" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 r" i0 $end
$var wire 1 v" o $end
$var wire 1 f" j $end
$var wire 1 u" i1 $end
$upscope $end
$upscope $end
$scope module iv1 $end
$var wire 1 r" i $end
$var wire 1 t" o $end
$upscope $end
$scope module xr $end
$var wire 1 r" i0 $end
$var wire 1 q" i1 $end
$var wire 1 u" o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad0 $end
$var wire 1 $ i0 $end
$var wire 1 0 o $end
$var wire 1 f" i1 $end
$upscope $end
$scope module inv $end
$var wire 1 / o $end
$var wire 1 f" i $end
$upscope $end
$scope module oc0 $end
$var wire 1 y" i1 $end
$var wire 1 z" i2 $end
$var wire 1 {" t $end
$var wire 1 f" o $end
$var wire 1 e" i0 $end
$scope module or2_0 $end
$var wire 1 y" i1 $end
$var wire 1 {" o $end
$var wire 1 e" i0 $end
$upscope $end
$scope module or2_1 $end
$var wire 1 z" i0 $end
$var wire 1 {" i1 $end
$var wire 1 f" o $end
$upscope $end
$upscope $end
$scope module reset1 $end
$var wire 1 $ clk $end
$var wire 1 |" in $end
$var wire 1 }" load $end
$var wire 1 % reset $end
$var wire 1 e" out $end
$var wire 1 ~" _in $end
$scope module dfr_1 $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 e" out $end
$var wire 1 ~" in $end
$var wire 1 !# df_in $end
$scope module df_0 $end
$var wire 1 $ clk $end
$var wire 1 e" out $end
$var wire 1 !# in $end
$var reg 1 e" df_out $end
$upscope $end
$scope module or2_0 $end
$var wire 1 % i1 $end
$var wire 1 !# o $end
$var wire 1 ~" i0 $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 e" i0 $end
$var wire 1 |" i1 $end
$var wire 1 }" j $end
$var wire 1 ~" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module mxAC $end
$var wire 4 "# i0 [3:0] $end
$var wire 4 ## i1 [3:0] $end
$var wire 1 / s $end
$var wire 4 $# opm [3:0] $end
$scope begin mux_loop[0] $end
$scope module mx $end
$var wire 1 %# i0 $end
$var wire 1 &# i1 $end
$var wire 1 / j $end
$var wire 1 '# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module mx $end
$var wire 1 (# i0 $end
$var wire 1 )# i1 $end
$var wire 1 / j $end
$var wire 1 *# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module mx $end
$var wire 1 +# i0 $end
$var wire 1 ,# i1 $end
$var wire 1 / j $end
$var wire 1 -# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module mx $end
$var wire 1 .# i0 $end
$var wire 1 /# i1 $end
$var wire 1 / j $end
$var wire 1 0# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module mxQ $end
$var wire 4 1# i0 [3:0] $end
$var wire 4 2# i1 [3:0] $end
$var wire 1 / s $end
$var wire 4 3# opm [3:0] $end
$scope begin mux_loop[0] $end
$scope module mx $end
$var wire 1 4# i0 $end
$var wire 1 5# i1 $end
$var wire 1 / j $end
$var wire 1 6# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module mx $end
$var wire 1 7# i0 $end
$var wire 1 8# i1 $end
$var wire 1 / j $end
$var wire 1 9# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module mx $end
$var wire 1 :# i0 $end
$var wire 1 ;# i1 $end
$var wire 1 / j $end
$var wire 1 <# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module mx $end
$var wire 1 =# i0 $end
$var wire 1 ># i1 $end
$var wire 1 / j $end
$var wire 1 ?# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module qtpr $end
$var wire 1 0 clk $end
$var wire 1 * in $end
$var wire 1 % reset $end
$var wire 1 @# reset_ $end
$var wire 1 + out $end
$var wire 1 A# df_in $end
$scope module and2_0 $end
$var wire 1 * i0 $end
$var wire 1 A# o $end
$var wire 1 @# i1 $end
$upscope $end
$scope module df_0 $end
$var wire 1 0 clk $end
$var wire 1 A# in $end
$var wire 1 + out $end
$var reg 1 + df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 % i $end
$var wire 1 @# o $end
$upscope $end
$upscope $end
$scope module resetmux2 $end
$var wire 4 B# i0 [3:0] $end
$var wire 4 C# i1 [3:0] $end
$var wire 1 % s $end
$var wire 4 D# opm [3:0] $end
$scope begin mux_loop[0] $end
$scope module mx $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 1 % j $end
$var wire 1 G# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module mx $end
$var wire 1 H# i0 $end
$var wire 1 I# i1 $end
$var wire 1 % j $end
$var wire 1 J# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module mx $end
$var wire 1 K# i0 $end
$var wire 1 L# i1 $end
$var wire 1 % j $end
$var wire 1 M# o $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module mx $end
$var wire 1 N# i0 $end
$var wire 1 O# i1 $end
$var wire 1 % j $end
$var wire 1 P# o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0P#
0O#
xN#
1M#
1L#
xK#
0J#
0I#
xH#
0G#
0F#
xE#
b100 D#
b100 C#
bx B#
0A#
0@#
x?#
x>#
z=#
x<#
x;#
z:#
x9#
x8#
z7#
x6#
x5#
z4#
bx 3#
bx 2#
bz 1#
x0#
x/#
z.#
x-#
x,#
z+#
x*#
x)#
z(#
x'#
x&#
z%#
bx $#
bx ##
bz "#
1!#
0~"
1}"
0|"
x{"
xz"
xy"
0x"
0w"
xv"
xu"
xt"
xs"
xr"
xq"
0p"
0o"
xn"
xm"
xl"
xk"
xj"
xi"
bx h"
bx g"
xf"
xe"
bx d"
bx c"
bx b"
bx a"
bx `"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
bx S"
bx R"
bx Q"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
bx D"
xC"
0B"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
bx 4"
x3"
12"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
bx $"
x#"
1""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
bx r
xq
0p
xo
bx n
bx m
b110 l
bx k
xj
bx i
bx h
xg
xf
b110 e
bx d
0c
1b
0a
x`
0_
1^
1]
1\
x[
1Z
0Y
1X
0W
xV
0U
0T
1S
0R
xQ
0P
b100 O
bx N
0M
1L
0K
0J
xI
xH
xG
0F
0E
xD
xC
xB
0A
0@
x?
x>
x=
0<
0;
x:
x9
x8
bx 7
bx 6
15
bx 4
bx 3
b100 2
bx 1
00
x/
bx .
bx -
bx ,
x+
x*
x)
bz (
b100 '
b110 &
1%
0$
b100 #
b110 "
bx !
$end
#50
0^"
0E"
0C"
06"
0<"
1["
0:"
15"
03"
0j
0&"
0F"
0U"
0,"
1X"
0L"
1v"
0s
0*"
b110 h
b110 m
b110 R"
1%"
0J"
1s"
1u"
0#"
0:
0?
0D
0I
0w
0}
1)"
1/"
19"
1?"
0I"
0O"
1q"
1n"
0t
0N#
08
0=
0B
0G
0z
0|
1."
1>"
0N"
1k"
1m"
0y
0)
0+"
0;"
0K"
b0 .
b0 7
b0 a"
0x
0u
0{
1'"
1-"
17"
1="
0G"
0M"
1i"
0v
0V"
z'#
0("
0Y"
z*#
08"
0\"
z-#
0H"
b0 3
b0 i
b0 S"
b0 `"
0_"
bz $#
z0#
z6#
0q
b0 r
0~
b11 $"
10"
b11 4"
1@"
b0 D"
0P"
0E#
z9#
1H#
z<#
0K#
bz !
bz ,
bz 3#
z?#
0/
b111 h"
1f"
0g
0o
0T"
0&#
0!"
0W"
0)#
01"
0Z"
0,#
0A"
0]"
0/#
0*
05#
b0 n
0f
08#
1;#
b10 -
b10 c"
b10 B#
0>#
1{"
0z"
0y"
0+
09
0>
0C
b0 4
b0 6
b0 d
b0 k
b0 Q"
b0 ##
0H
0Q
0V
1[
b100 1
b100 N
b100 b"
b100 2#
0`
1e"
1l"
0j"
1t"
b0 d"
b0 g"
0r"
10
1$
#100
1Y
0^
1W
0\
1U
0Z
00
1p"
1x"
0!#
1J#
b10 2
b10 O
b10 D#
0M#
0$
1;
1@
1E
1J
1o"
1w"
1@#
0%
#150
1T
0Y
1R
0W
1P
0U
1G#
b1 2
b1 O
b1 D#
0J#
1x"
0p"
1E#
0H#
1v"
0q"
0n"
18#
b1 -
b1 c"
b1 B#
0;#
0s"
1u"
1y"
b1 h"
0k"
0m"
1z"
1{"
1V
b10 1
b10 N
b10 b"
b10 2#
0[
0t"
1r"
0l"
b11 d"
b11 g"
1j"
0e"
10
1$
#200
00
0$
#250
1F
1K
0c
1D
1I
0a
1B
1G
0_
1#"
0P#
1t
1_"
0N#
1z
1X"
0["
1^"
1<
0A
0T
0)
1x
1%"
05"
1E"
1:
0?
0R
0V"
1w
1}
0)"
0/"
09"
0?"
1I"
1O"
18
0=
0x"
0P
0U"
1|
0."
0>"
1N"
b1101 .
b1101 7
b1101 a"
0v"
b0 2
b0 O
b0 D#
0G#
b1010 h
b1010 m
b1010 R"
0s
1u
1{
0'"
0-"
07"
0="
1G"
1M"
1Y"
b1010 3
b1010 i
b1010 S"
b1010 `"
0\"
0u"
1p"
0E#
1A#
1q
b1011 r
1~
b0 $"
00"
b0 4"
0@"
b11 D"
1P"
1g
1q"
1n"
b0 -
b0 c"
b0 B#
08#
1*
15#
b11 n
1f
b11 h"
1k"
1m"
0z"
0V
b1 1
b1 N
b1 b"
b1 2#
1Q
1l"
b10 d"
b10 g"
0j"
10
1$
#300
00
0$
#350
1<
1c
1:
0A
0F
0K
1a
18
0?
0D
0I
1_
03"
1L"
0=
0B
0G
b1000 2
b1000 O
b1000 D#
1P#
0&"
1Y"
1J"
b1 .
b1 7
b1 a"
1N#
0#"
0,"
1X"
1C"
0\"
0_"
b1000 -
b1000 c"
b1000 B#
1)
0t
0*"
1%"
16"
0["
1j
0^"
b11 3
b11 i
b11 S"
b11 `"
1V"
1)"
1/"
1;"
05"
1F"
0E"
0z
1U"
1."
18"
0y
1w
1}
09"
0?"
0K"
1I"
1O"
0x
b11 h
b11 m
b11 R"
1s
0u
0{
1'"
1-"
17"
1="
0G"
0M"
0x"
0p"
0v
1|
0>"
0H"
1N"
0A#
0q
b10 r
0~
b11 $"
10"
b101 4"
1@"
b1010 D"
0P"
0v"
0{"
0q"
0n"
1o
1T"
1&#
11"
1Z"
1,#
1A"
1]"
1/#
0*
05#
b11000 n
0f
0s"
0u"
0y"
b1 h"
0k"
0m"
1z"
1+
19
1C
b1101 4
b1101 6
b1101 d
b1101 k
b1101 Q"
b1101 ##
1H
b0 1
b0 N
b0 b"
b0 2#
0Q
1t"
0r"
0l"
b1 d"
b1 g"
1j"
10
1$
#400
00
0$
#450
0j
1^
0F"
0<
1\
0L"
0^"
0C"
1["
0:
1Z
0J"
0E"
b0 n
06"
b111 h
b111 m
b111 R"
15"
08
b1100 2
b1100 O
b1100 D#
1M#
0I"
0O"
0;"
19"
1?"
b0 .
b0 7
b0 a"
0s"
0u"
1'#
0*#
0-#
b1 $#
00#
06#
09#
0<#
b11000 !
b11000 ,
b1000 3#
1?#
0i"
1K#
b0 D"
0N"
08"
b11 4"
1>"
b1 3
b1 i
b1 S"
b1 `"
0Y"
0q"
1/
0f"
b1100 -
b1100 c"
b1100 B#
1>#
0A"
0]"
0/#
01"
0Z"
0,#
0g
b0 h"
0k"
0m"
0z"
b1000 1
b1000 N
b1000 b"
b1000 2#
1`
0H
b1 4
b1 6
b1 d
b1 k
b1 Q"
b1 ##
0C
0+
1l"
b0 d"
b0 g"
0j"
00
1$
#500
0$
#550
1$
#600
0$
#650
1$
#700
0$
#750
1$
#800
0$
#850
1$
#900
0$
#950
1$
#1000
0$
#1050
1$
#1100
0$
#1150
1$
#1200
0$
#1250
1$
#1300
0$
#1350
1$
#1400
0$
#1450
1$
#1500
0$
#1550
1$
#1600
0$
#1650
1$
#1700
0$
#1750
1$
#1800
0$
#1850
1$
#1900
0$
#1950
1$
#2000
0$
